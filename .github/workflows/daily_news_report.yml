name: Daily AI News Report

on:
  schedule:
    - cron: '0 6 * * *' # Runs daily at 06:00 UTC
  workflow_dispatch: # Allows manual triggering

jobs:
  build_and_send_report:
    runs-on: ubuntu-latest
    permissions: # Add permissions for writing to contents
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' # Specify Python version

      - name: Install dependencies
        run: pip install feedparser requests beautifulsoup4
      
      - name: Create reports directory
        run: mkdir -p reports

      - name: Run News Fetcher Script and Save Report
        id: news_script # Add an id to this step
        run: |
          FILENAME="reports/ai_news_report_$(date +%Y-%m-%d_%H-%M-%S).md"
          python news_fetcher.py --output $FILENAME
          echo "report_path=$FILENAME" >> $GITHUB_OUTPUT # Set output for other steps
          echo "Report saved to $FILENAME"

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Action Bot"
          git config --global user.email "actions@github.com"

      - name: Commit and Push Report
        run: |
          git add ${{ steps.news_script.outputs.report_path }}
          # Check if there are changes to commit to avoid error if the file is unchanged (though unlikely for new reports)
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Add daily AI news report for $(date +%Y-%m-%d)"
            git push
          fi
      - name: Run news fetcher script and generate report
        run: python news_fetcher.py > report.md
        # This is a placeholder. You'll need to configure this step for actual email sending.
        # 1. Create a GitHub secret named USER_EMAIL in your repository settings 
        #    (Settings > Secrets and variables > Actions > New repository secret) 
        #    with the email address where you want to receive the report.
        # 2. Depending on the email action you choose (e.g., dawidd6/action-send-mail@v3), 
        #    you might need additional secrets for your email provider's SMTP server, 
        #    username, and password (e.g., SMTP_USERNAME, SMTP_PASSWORD).
        # 3. Uncomment the 'uses' and 'with' sections below and fill in your specific details.
        #
        # uses: dawidd6/action-send-mail@v3
        # with:
        #   server_address: smtp.example.com # Replace with your SMTP server address
        #   server_port: 587                  # Replace with your SMTP server port (usually 587 or 465)
        #   username: ${{ secrets.SMTP_USERNAME }}    # GitHub secret for your SMTP username
        #   password: ${{ secrets.SMTP_PASSWORD }}    # GitHub secret for your SMTP password
        #   subject: Daily AI News Report - ${{ github.workflow }}
        #   to: ${{ secrets.USER_EMAIL }}       # GitHub secret for the recipient email address
        #   from: GitHub Actions Reporter <noreply@example.com> # Replace with your desired sender email
        #   body_file: ${{ steps.news_script.outputs.report_path }} # Uses the report generated by the script
        #   # Alternatively, if you had captured the report in an environment variable:
        #   # body: ${{ env.REPORT_CONTENT }}
        #   content_type: text/markdown       # Set if your report.md is Markdown (recommended)
        run: |
          echo "Email sending step is a placeholder."
          echo "To enable email notifications, configure the commented-out section above."
          echo "Report content would be sent from ${{ steps.news_script.outputs.report_path }}"
          if [ -f "${{ steps.news_script.outputs.report_path }}" ]; then
            echo "--- report.md content preview (from ${{ steps.news_script.outputs.report_path }}) ---"
            head -n 20 "${{ steps.news_script.outputs.report_path }}" # Display first 20 lines of the report for logging
            echo "--- end of preview ---"
          else
            echo "${{ steps.news_script.outputs.report_path }} not found."
          fi
